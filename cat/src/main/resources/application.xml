<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="    
           http://www.springframework.org/schema/beans    
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
           http://www.springframework.org/schema/aop    
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
           http://www.springframework.org/schema/context    
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    
    
	
	<!-- -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>  
               <value>classpath:properties/*.properties</value>  
            </list>  
        </property>  
    </bean>  
    
    <!-- 配置这个bean解决中文乱码问题 -->
    <bean  class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >  
	    <property name="messageConverters">  
	         <list>  
	             <bean class = "org.springframework.http.converter.StringHttpMessageConverter">  
	                <property name = "supportedMediaTypes">  
	                     <list>  
	                         <value>text/plain;charset=UTF-8</value>  
	                     </list>  
	                </property>  
	             </bean>  
	         </list>  
	    </property>  
	</bean> 
    
    <!-- 配置数据源 -->  
    <bean id="dataSource"  
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
       <!-- 使用properties来配置 -->  
        <property name="driverClassName">  
            <value>${jdbc_driverClassName}</value>  
        </property>  
        <property name="url">  
            <value>${jdbc_url}</value>  
        </property>  
        <property name="username">  
            <value>${jdbc_username}</value>  
        </property>  
        <property name="password">  
            <value>${jdbc_password}</value>  
        </property>
    </bean>  
    
    
    <!-- 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 -->
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage"  
            value="com.cat.dao" />  
    </bean>
    
     <!-- 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，configLocation配置mybatis-config文件位置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="mapperLocations" value="classpath*:com/cat/mapper/**/*.xml"/>    
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />  
        <!-- <property name="typeAliasesPackage" value="com.tiantian.ckeditor.model"   
            /> -->  
    </bean> 
    
    <!-- 0.开启注解扫描 -->
	<!-- <mvc:annotation-driven /> -->
	<context:component-scan base-package="com.cat.controller" />
	
    <!-- 自动扫描注解的bean -->  
    <context:component-scan base-package="com.cat.service" /> 
    
     
     
      
    
    
    
</beans>